<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <flow name="getOrders">
        <db:select config-ref="MySQL_Configuration" doc:name="select all orders">
            <db:parameterized-query><![CDATA[select 
	o.order_id,
	o.customer_id,
	o.order_date,
	o.total_price,
	oi.order_item_id,
	oi.product_id,
	oi.price,
	oi.quantity
from orders o
join order_item oi
	on o.order_id = oi.order_id]]></db:parameterized-query>
        </db:select>
        <dw:transform-message doc:name="Transform Message">
            <dw:input-payload doc:sample="sample_data/list_map_1.dwl"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map ((payload01 , indexOfPayload01) -> {
	id: payload01.order_id as :number,
	customerId: payload01.customer_id,
	orderDate: payload01.order_date as :string,
	totalPrice: payload01.total_price as :number
}) distinctBy $.id

]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="postOrder">
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <enricher source="#[payload[0].order_id]" target="flowVars.orderId" doc:name="Message Enricher - orderId">
            <db:select config-ref="MySQL_Configuration" doc:name="Generate Unique orderId">
                <db:parameterized-query><![CDATA[select UUID_SHORT() as order_id from dual;]]></db:parameterized-query>
            </db:select>
        </enricher>
        <enricher target="flowVars.throwAway" doc:name="Message Enricher">
            <db:insert config-ref="MySQL_Configuration" doc:name="Create order record">
                <db:parameterized-query><![CDATA[insert into orders(
	order_id, 
	customer_id,
	order_date,
	total_price,
	order_source,
	order_source_id
	)
values(
	#[flowVars.orderId],
	#[payload.customerId],
	str_to_date(LEFT(#[payload.orderDate],10), '%Y-%m-%d'),
	#[payload.totalPrice],
	#[payload.orderSource],
	#[payload.orderSourceId]
);]]></db:parameterized-query>
            </db:insert>
        </enricher>
        <foreach collection="#[payload.orderItems]" doc:name="For Each - orderItem">
            <db:insert config-ref="MySQL_Configuration" doc:name="create orderItem record">
                <db:parameterized-query><![CDATA[insert into order_item(
	order_id, 
	product_id, 
	quantity, 
	price, 
	discount, 
	amount) 
values(
	#[flowVars.orderId],
	#[payload.productId],
	#[payload.quantity],
	#[payload.price],
	0,
	#[payload.quantity * payload.price]
);]]></db:parameterized-query>
            </db:insert>
        </foreach>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	orderId: flowVars.orderId as :number
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
</mule>
