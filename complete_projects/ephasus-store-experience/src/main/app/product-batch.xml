<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <batch:job name="productBatch">
        <batch:process-records>
            <batch:step name="Step1_CreateShopifyProduct">
                <batch:set-record-variable variableName="productId" value="#[payload.id]" doc:name="Set productId recordVar"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	price: payload.price,
	productName: payload.name,
	productType: 'Retro Electronics',
	sku: payload.sku,
	vendor: 'Ephasus Industries'
}]]></dw:set-payload>
                </dw:transform-message>
                <http:request config-ref="HTTP_Request_Configuration" path="/shopifyProducts" method="POST" doc:name="POST  shopifyProducts"/>
                <dw:transform-message doc:name="Transform Message" metadata:id="f74a8b4c-b764-45ad-a03c-3ec2972668e4">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	id: recordVars.productId,
	shopifyProductId: payload.shopifyProductId
}]]></dw:set-payload>
                </dw:transform-message>
            </batch:step>
            <batch:step name="Step2_Update_Local_Product_With_shopifyId">
                <json:object-to-json-transformer doc:name="Object to JSON"/>
                <http:request config-ref="HTTP_Request_Configuration" path="/products/{productId}" method="PATCH" doc:name="PATCH products">
                    <http:request-builder>
                        <http:uri-param paramName="productId" value="#[recordVars.productId]"/>
                    </http:request-builder>
                </http:request>
                <logger message="productId: #[recordVars.productId]" level="INFO" doc:name="Logger"/>
            </batch:step>
        </batch:process-records>
    </batch:job>
    <flow name="getProductBatch">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/productBatch" allowedMethods="GET" doc:name="HTTP"/>
        <http:request config-ref="HTTP_Request_Configuration" path="/products" method="GET" doc:name="GET products that are not in Shopify">
            <http:request-builder>
                <http:query-param paramName="inShopify" value="false"/>
            </http:request-builder>
        </http:request>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload
]]></dw:set-payload>
        </dw:transform-message>
        <batch:execute name="productBatch" doc:name="Batch Execute"/>
        <set-payload value="Batch initiated" doc:name="Set Payload"/>
    </flow>
</mule>
